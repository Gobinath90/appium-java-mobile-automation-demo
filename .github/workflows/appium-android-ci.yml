# GitHub Actions Workflow for Appium Java Android Application Automation

# This GitHub Actions workflow is designed to build a Maven project and execute Appium tests using an Android mobile device.
# The automation project utilizes TestNG, Appium, Maven, and Java as its core technologies.

# For more details on building and testing Java projects with Maven using GitHub Actions, please refer to the official documentation:
# https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Appium Java Android Application Automation CI

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build:
    runs-on: macos-latest 
    steps:
    - uses: actions/checkout@v3

    # Setup Java, Appium, and Android Driver
    - name: Setup Java, Appium, and Android Driver
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - uses: actions/setup-node@v3
      with:
       node-version: '20'
    - run: |
            npm install -g appium@next
            appium -v
            appium driver install uiautomator2
            appium &>/dev/null &

  test:
    runs-on: macos-latest
    needs: build
    
    steps:
      - uses: actions/checkout@v3

      # Restore cached build dependencies
      - name: Restore cached build dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            # Add other directories that you cached in the "build" job
          key: ${{ runner.os }}-build-${{ hashFiles('pom.xml') }}

      # Run Appium Android Tests
      - name: Run Appium Android Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          script: mvn clean test -Pandroid,qa

      # Archive Test Reports
      - name: Archive Test Reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-reports
          path: reports
